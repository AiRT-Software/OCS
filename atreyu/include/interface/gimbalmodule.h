#pragma pack(push, 1)
// ACTIONS
// Non payload actions are built using a single AiRT command packet:
// { 'A', GIMBAL_MULTIPLEXER_MODULE, <ACTION>}
// where <ACTION> can be any of the \sa StdMessage::GimbalMultiplexerCommandType that do not require a parameter

// For other actions:

// Go to angle
struct GoToAngle
{
    const AIRT_Message_Header header{StdMessage::GIMBAL_MULTIPLEXER_MODULE, StdMessage::GIMBAL_GOTO_ANGLE};
    uint8_t space; //  not used
    float pitch, roll, yaw; // radians
    float speedRadPerSec; // radians/s
};

// Set yaw offset. After receiving this message, the GIMBAL_GOTO_ANGLE command will add this offset to the yaw angle
// For example, after SetYawOffset(30), a GotoAngle(pitch, roll, yaw, speedRadPerSec) will arrive to the gimbal as 
// GotoAngle(pitch, roll, yaw+30, speedRadPerSec). It is used to set the orientation of the gimbal when it started
struct SetYawOffset 
{
    const AIRT_Message_Header header{StdMessage::GIMBAL_MULTIPLEXER_MODULE, StdMessage::GIMBAL_SET_YAW_OFFSET};
    uint8_t space; // not used
    float offset;   // radians
};


// NOTIFICATIONS
// Someone asked the gimbal to go to a certain angle at a certain speed. We have sent this command to the gimbal, but we have no idea
// when/if it will get there
struct GotoAngleNotification
{
    const AIRT_Message_Header header{StdMessage::GIMBAL_MULTIPLEXER_NOTIFICATIONS_MODULE, StdMessage::GIMBAL_GOTO_ANGLE_NOTIFICATION};
    uint8_t space;  // not used
    float pitch, roll, yaw; // radians
    float speedRadPerSec; // radians/s
};

// The current (hopefully) gimbal configuration. These messages are generated by the Gimbal module as an estimation of where the gimbal
// should be after a GoToAngle command
struct GimbalAngleNotification
{
    const AIRT_Message_Header header{StdMessage::GIMBAL_MULTIPLEXER_NOTIFICATIONS_MODULE, StdMessage::GIMBAL_ANGLE_CHANGED_NOTIFICATION};
    uint8_t space; // not used
    float pitch, roll, yaw; // radians
};


// There are also payload-less notifications:
// {'A', StdMessage::GIMBAL_MULTIPLEXER_NOTIFICATIONS_MODULE, StdMessage::GIMBAL_MODE_CHANGED_TO_RC_NOTIFICATION}
// {'A', StdMessage::GIMBAL_MULTIPLEXER_NOTIFICATIONS_MODULE, StdMessage::GIMBAL_MODE_CHANGED_TO_RC_FIX_MODE_NOTIFICATION}
// {'A', StdMessage::GIMBAL_MULTIPLEXER_NOTIFICATIONS_MODULE, StdMessage::GIMBAL_MODE_CHANGED_TO_RC_NOROLL_MODE_NOTIFICATION}


#pragma pack(pop)